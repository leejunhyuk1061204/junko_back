<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.junko.account.AccountEntryDAO">
	
	<select id="accountList" resultType="kr.co.junko.dto.AccountingEntryDTO">
		SELECT entry_idx 
		,account_idx
		,entry_type
		,amount
		,entry_date 
		,custom_idx
        ,sales_idx
		FROM accountingEntry
		WHERE del_yn = false
		ORDER BY entry_idx DESC
		LIMIT #{limit} OFFSET #{offset}
		
	</select>
	
	<select id="pages" resultType="int">
		SELECT CEIL(COUNT(entry_idx)/#{param1}) AS pages FROM accountingEntry
	</select>
	
	<insert id="accountRegist" parameterType="kr.co.junko.dto.AccountingEntryDTO">
	INSERT INTO accountingEntry (account_idx, entry_type, amount, entry_date, custom_idx, sales_idx)
VALUES (#{account_idx}, #{entry_type}, #{amount}, #{entry_date}, #{custom_idx}, #{sales_idx})
	</insert>
	
	<select id="accountDetail" resultType="map">
    SELECT
        ae.entry_idx,
        ae.account_idx,
        ae.entry_type,
        ae.amount,
        ae.entry_date,
        ae.custom_idx,
        c.custom_name,
        ae.sales_idx,
        s.customer as customer_name
    FROM accountingEntry ae
    LEFT JOIN custom c ON ae.custom_idx = c.custom_idx
    LEFT JOIN sales s ON ae.sales_idx = s.sales_idx
    WHERE ae.entry_idx = #{entry_idx}
    </select>
	
	
	<update id="accountUpdate" parameterType="kr.co.junko.dto.AccountingEntryDTO">
	UPDATE accountingEntry SET 
	entry_type=#{entry_type}, amount=#{amount}, custom_idx=#{custom_idx}, sales_idx=#{sales_idx}
	WHERE entry_idx=#{entry_idx}
	</update>
	
	<delete id="accountDelete" parameterType="int">
	DELETE FROM accountingEntry WHERE entry_idx=#{entry_idx}
	</delete>
	
	
	
	
	
</mapper>