<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.junko.claim.ClaimDAO">

	<insert id="claimInsert" parameterType="kr.co.junko.dto.ClaimDTO"
	useGeneratedKeys="true"
	keyColumn="claim_idx"
	keyProperty="claim_idx">
		insert into claim (sales_idx, type, claim_reason)
		values (#{sales_idx},#{type},#{claim_reason})
	</insert>

	<update id="claimUpdate" parameterType="kr.co.junko.dto.ClaimDTO">
		update claim
		<trim prefix="set" suffixOverrides=",">
			<if test="sales_idx != null and sales_idx != 0">
				sales_idx = #{sales_idx},
			</if>
			<if test="type != null and type != ''">
				type = #{type},
			</if>
			<if test="claim_reason != null and claim_reason != ''">
				claim_reason = #{claim_reason},
			</if>
			<if test="status != null and status != ''">
				status = #{status}
			</if>
		</trim>
		where claim_idx = #{claim_idx}
	</update>

	<select id="claimList" parameterType="map" resultType="kr.co.junko.dto.ClaimDTO">
		select * from claim
		<where>
			del_yn = false
			<if test="sales_idx != null and sales_idx != 0">
				and sales_idx = #{sales_idx}
			</if>
			<if test="type != null and type != ''">
				and type = #{type}
			</if>
			<if test="claim_reason != null and claim_reason != ''">
				and claim_reason like concat('%',#{claim_reason},'%')
			</if>
			<if test="status != null and status != ''">
				and status = #{status}
			</if>
			<if test="start_date != null and start_date != ''">
				and claim_date > #{start_date}
			</if>
			<if test="end_date != null and end_date !=''">
				and claim_date <![CDATA[<]]> #{end_date}
			</if>
			<if test="claim_date != null and claim_date !=''">
				and claim_date = #{claim_date}
			</if>
		</where>
		<if test="orderColumn != null and orderColumn != ''">
			order by ${orderColumn}
			<if test="orderDirection != null and orderDirection !=''">
				${orderDirection}
			</if>
		</if>
		limit #{cnt} offset #{offset}
	</select>

	<select id="claimListTotalPage" parameterType="map">
		select ceil(count(*)*1.0/#{cnt}) from claim
		<where>
			del_yn = false
			<if test="sales_idx != null and sales_idx != 0">
				and sales_idx = #{sales_idx}
			</if>
			<if test="type != null and type != ''">
				and type = #{type}
			</if>
			<if test="claim_reason != null and claim_reason != ''">
				and claim_reason like concat('%',#{claim_reason},'%')
			</if>
			<if test="status != null and status != ''">
				and status = #{status}
			</if>
			<if test="start_date != null and start_date != ''">
				and claim_date > #{start_date}
			</if>
			<if test="end_date != null and end_date !=''">
				and claim_date <![CDATA[<]]> #{end_date}
			</if>
			<if test="claim_date != null and claim_date !=''">
				and claim_date = #{claim_date}
			</if>
		</where>
	</select>
	
	<update id="claimDel">
		update claim set del_yn = true where claim_idx = #{param1}
	</update>
	
	<select id="claimDetailByIdx" resultType="kr.co.junko.dto.ClaimDTO">
		select * from claim where claim_idx = #{param1}
	</select>
	
	<insert id="returnProductInsert" parameterType="kr.co.junko.dto.ReturnProductDTO">
		insert into return_product (claim_idx,product_idx, return_cnt 
		<if test="product_option_idx != null and product_option_idx != 0">
			,product_option_idx
		</if>
		<if test="exchange_option != null and exchange_option != 0">
			,exchange_option
		</if>
		)
		values (#{claim_idx},#{product_idx},#{return_cnt}
		<if test="product_option_idx != null and product_option_idx != 0">
			,#{product_option_idx}
		</if>
		<if test="exchange_option != null and exchange_option != 0">
			,#{exchange_option}
		</if>
		)
	</insert>
	
	<update id="returnProductUpdate" parameterType="map">
		update return_product
		<trim prefix="set" suffixOverrides=",">
			<if test="claim_idx != null and claim_idx != 0">
				claim_idx != #{claim_idx},
			</if>
			<if test="product_idx != null and product_idx != 0">
				product_idx = #{product_idx},
			</if>
			<if test="product_option_idx != null and product_option_idx != 0">
				product_option_idx = #{product_option_idx},
			</if>
			<if test="return_cnt != null and return_cnt != 0">
				return_cnt =#{return_cnt},
			</if>
			<if test="exchange_option != null and exchange_option != 0">
				exchange_option = #{exchange_option}
			</if>
		</trim>
		where return_product_idx = #{return_product_idx}
	</update>
	
	<select id="returnProductList" parameterType="map" resultType="kr.co.junko.dto.ReturnProductDTO">
		select * from return_product
		<where>
			del_yn = false
			<if test="claim_idx != null and claim_idx != 0">
				and claim_idx != #{claim_idx}
			</if>
			<if test="product_idx != null and product_idx != 0">
				and product_idx = #{product_idx}
			</if>
			<if test="product_option_idx != null and product_option_idx != 0">
				and product_option_idx = #{product_option_idx}
			</if>
			<if test="exchange_option != null and exchange_option != 0">
				and exchange_option = #{exchange_option}
			</if>
		</where>
		<if test="orderColumn != null and orderColumn !=''">
			order by ${orderColumn}
			<if test="orderDirection != null and orderDirection != ''">
				${orderDirection}
			</if>
		</if>
		limit #{cnt} offset #{offset}
	</select>
	
	<select id="returnProductListTotalPage" parameterType="map">
		select ceil(count(*)*1.0/#{cnt}) from return_product
		<where>
			del_yn = false
			<if test="claim_idx != null and claim_idx != 0">
				and claim_idx != #{claim_idx}
			</if>
			<if test="product_idx != null and product_idx != 0">
				and product_idx = #{product_idx}
			</if>
			<if test="product_option_idx != null and product_option_idx != 0">
				and product_option_idx = #{product_option_idx}
			</if>
			<if test="exchange_option != null and exchange_option != 0">
				and exchange_option = #{exchange_option}
			</if>
		</where>
	</select>
	
	<update id="returnProductDel">
		update return_product set del_yn = true where return_product_idx = #{param1}
	</update>
	
	<select id="returnProductByClaimIdx" resultType="kr.co.junko.dto.ReturnProductDTO">
		select * from return_product where claim_idx = #{param1}
	</select>
	
</mapper>