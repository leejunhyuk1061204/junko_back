<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.junko.sales.SalesDAO">

	<insert id="salesInsert" parameterType="kr.co.junko.dto.SalesDTO"
	useGeneratedKeys="true"
	keyColumn="sales_idx"
	keyProperty="sales_idx">
		insert into sales (customer, customer_phone, customer_address, payment_option
		<if test="payment_date != null">
			,payment_date
		</if>
		<if test="status != null and status != ''">
			,status
		</if>
		)
		values (#{customer},#{customer_phone},#{customer_address},#{payment_option}
		<if test="payment_date != null">
			,#{payment_date}
		</if>
		<if test="status != null and status != ''">
			,#{status}
		</if>
		)
	</insert>
	
	<update id="salesUpdate" parameterType="kr.co.junko.dto.SalesDTO">
		update sales
		<trim prefix="set" suffixOverrides=",">
			<if test="customer != null and customer != ''">
				customer = #{customer},
			</if>
			<if test="customer_phone != null and customer_phone != ''">
				customer_phone = #{customer_phone},
			</if>
			<if test="customer_address != null and customer_address != ''">
				customer_address = #{customer_address},
			</if>
			<if test="payment_option != null and payment_option !=''">
				payment_option = #{payment_option},
			</if>
			<if test="payment_date != null">
				payment_date = #{payment_date},
			</if>
			<if test="status != null and status != ''">
				status = #{status}
			</if>
		</trim>
		where sales_idx = #{sales_idx}
	</update>

	<select id="salesList" parameterType="map" resultType="map">
		select s.*
			,p.product_name
			,c.combined_name 
			,count(s.sales_idx) as product_cnt
		from sales s
			join sales_product sp on s.sales_idx = sp.sales_idx
			join product p on p.product_idx = sp.product_idx
			left join product_option po on po.product_option_idx = sp.product_option_idx
			left join combined c on c.combined_idx = po.combined_idx
		<where>
			s.del_yn = false
			<if test="customer != null and customer != ''">
				and s.customer = #{customer}
			</if>
			<if test="customer_phone != null and customer_phone != ''">
				and s.customer_phone = #{customer_phone}
			</if>
			<if test="customer_address != null and customer_address != ''">
				and s.customer_address = #{customer_address}
			</if>
			<if test="payment_option != null and payment_option != ''">
				and s.payment_option = #{payment_option}
			</if>
			<if test="mode == true and reg_date != null and reg_date !=''">
				and s.reg_date = #{reg_date}
			</if>
			<if test="mode == true and start_date != null and start_date != ''">
				and s.reg_date >= #{start_date}
			</if>
			<if test="mode == true and end_date != null and end_date != ''">
				and s.reg_date <![CDATA[<]]>= #{end_date}
			</if>
			<if test="mode == false and payment_date != null and payment_date != ''">
				and s.payment_date = #{payment_date}
			</if>
			<if test="mode == false and start_date != null and start_date != ''">
				and s.payment_date >= #{start_date}
			</if>
			<if test="mode == false and end_date != null and end_date != ''">
				and s.payment_date <![CDATA[<]]>= #{end_date}
			</if>
			<if test="status != null and status != ''">
				and s.status = #{status}
			</if>
			<if test="search != null and search != ''">
				AND (
					 s.customer LIKE CONCAT('%', #{search}, '%')
				OR s.sales_idx LIKE CONCAT('%', #{search}, '%')
				)
			</if>
		</where>
		group by s.sales_idx
		<if test="orderColumn != null and orderColumn != ''">
			order by ${orderColumn}
			<if test="orderDirection != null and orderDirection != ''">
				${orderDirection}
			</if>
		</if>
		<if test="page != null and page != ''">
			limit #{cnt} offset #{offset}
		</if>
	</select>
	
	<select id="salesListTotalPage" parameterType="map">
		select ceil(count(*)*1.0/#{cnt}) from (
			select s.*
			,p.product_name
			,c.combined_name 
			,count(s.sales_idx) as product_cnt
		from sales s
			join sales_product sp on s.sales_idx = sp.sales_idx
			join product p on p.product_idx = sp.product_idx
			left join product_option po on po.product_option_idx = sp.product_option_idx
			left join combined c on c.combined_idx = po.combined_idx
		<where>
			s.del_yn = false
			<if test="customer != null and customer != ''">
				and s.customer = #{customer}
			</if>
			<if test="customer_phone != null and customer_phone != ''">
				and s.customer_phone = #{customer_phone}
			</if>
			<if test="customer_address != null and customer_address != ''">
				and s.customer_address = #{customer_address}
			</if>
			<if test="payment_option != null and payment_option != ''">
				and s.payment_option = #{payment_option}
			</if>
			<if test="mode == true and reg_date != null and reg_date !=''">
				and s.reg_date = #{reg_date}
			</if>
			<if test="mode == true and start_date != null and start_date != ''">
				and s.reg_date >= #{start_date}
			</if>
			<if test="mode == true and end_date != null and end_date != ''">
				and s.reg_date <![CDATA[<]]>= #{end_date}
			</if>
			<if test="mode == false and payment_date != null and payment_date != ''">
				and s.payment_date = #{payment_date}
			</if>
			<if test="mode == false and start_date != null and start_date != ''">
				and s.payment_date >= #{start_date}
			</if>
			<if test="mode == false and end_date != null and end_date != ''">
				and s.payment_date <![CDATA[<]]>= #{end_date}
			</if>
			<if test="status != null and status != ''">
				and s.status = #{status}
			</if>
			<if test="search != null and search != ''">
				AND (
					 s.customer LIKE CONCAT('%', #{search}, '%')
				OR s.sales_idx LIKE CONCAT('%', #{search}, '%')
				)
			</if>
		</where>
		group by s.sales_idx
		) as total
	</select>

	<update id="salesDel">
		update sales set del_yn = true where sales_idx = #{param1}
	</update>

	<select id="salesDetailByIdx" resultType="kr.co.junko.dto.SalesDTO">
		select * from sales where sales_idx = #{param1}
	</select>

	<insert id="salesProductInsert" parameterType="kr.co.junko.dto.SalesProductDTO">
		insert into sales_product (sales_idx, product_idx, product_cnt, product_price
		<if test="product_option_idx != null and product_option_idx != 0">
			, product_option_idx
		</if>
		)
		values (#{sales_idx},#{product_idx},#{product_cnt},#{product_price}
		<if test="product_option_idx != null and product_option_idx != 0">
			, #{product_option_idx}
		</if>
		)
	</insert>

	<update id="salesProductUpdate" parameterType="kr.co.junko.dto.SalesProductDTO">
		update sales_product
		<trim prefix="set" suffixOverrides=",">
			<if test="sales_idx != null and sales_idx != 0">
				sales_idx = #{sales_idx},
			</if>
			<if test="product_idx != null and product_idx != 0">
				product_idx = #{product_idx},
			</if>
			<if test="product_cnt != null and product_cnt != 0">
				product_cnt = #{product_cnt},
			</if>
			<if test="product_price != null and product_price != 0">
				product_price = #{product_price}
			</if>
		</trim>
		where sales_product_idx = #{sales_product_idx}
	</update>
	
	<select id="salesProductList" parameterType="map" resultType="map">
		select sp.* 
			, p.product_name 
			, c.combined_name 
		from sales_product sp
			join product p on p.product_idx = sp.product_idx
			left join product_option po on po.product_option_idx = sp.product_option_idx
			left join combined c on c.combined_idx = po.combined_idx
		<where>
			sp.del_yn = false
			<if test="sales_idx != null and sales_idx != 0">
				and sp.sales_idx = #{sales_idx}
			</if>
			<if test="product_idx != null and product_idx != 0">
				and sp.product_idx = #{product_idx}
			</if>
		</where>
		<if test="orderColumn != null and orderColumn != ''">
			order by ${orderColumn}
			<if test="orderDirection != null and orderDirection != ''">
				${orderDirection}
			</if>
		</if>
		<if test="page != null and page != ''">
			limit #{cnt} offset #{offset}
		</if>
	</select>

	<select id="salesProdcutListTotalPage" parameterType="map">
		select ceil(count(*)*1.0/#{cnt}) from (
			select sp.* 
			, p.product_name 
			, c.combined_name 
		from sales_product sp
			join product p on p.product_idx = sp.product_idx
			left join product_option po on po.product_option_idx = sp.product_option_idx
			left join combined c on c.combined_idx = po.combined_idx
		<where>
			sp.del_yn = false
			<if test="sales_idx != null and sales_idx != 0">
				and sp.sales_idx = #{sales_idx}
			</if>
			<if test="product_idx != null and product_idx != 0">
				and sp.product_idx = #{product_idx}
			</if>
		</where>
		) as total
	</select>

	<update id="salesProductDel">
		update sales_product set del_yn = true where sales_product_idx = #{sales_product_idx}
	</update>

	<select id="searchPrice">
		select selling_price from product where product_idx = #{product_idx}
	</select>
</mapper>