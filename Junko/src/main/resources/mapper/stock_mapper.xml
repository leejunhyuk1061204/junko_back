<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.junko.stock.StockDAO">

	<select id="stockInfo" resultType="map">
		SELECT rp.product_idx, rp.product_option_idx,rp.receive_cnt, o.warehouse_idx, c.lot_require
		from receive r 
		join receive_product rp on r.receive_idx = rp.receive_idx 
		join `order` o on r.order_idx = o.order_idx 
		join product p on rp.product_idx = p.product_idx
		join category c on p.category_idx = c.category_idx
		where r.receive_idx = #{param1}
	</select>

	<insert id="stockInsert" parameterType="kr.co.junko.dto.StockDTO">
		insert into stock (product_idx,stock_cnt, zone_idx, type, user_idx, warehouse_idx
		<if test="product_option_idx != null and product_option_idx != 0">
			,product_option_idx
		</if>
		<if test="manufacture != null">
			,manufacture
		</if>
		<if test="expiration != null">
			,expiration
		</if>
		)
		values (#{product_idx},#{stock_cnt},#{zone_idx},#{type},#{user_idx}, #{warehouse_idx}
		<if test="product_option_idx != null and product_option_idx != 0">
			,#{product_option_idx}
		</if>
		<if test="manufacture != null">
			,#{manufacture}
		</if>
		<if test="expiration != null">
			,#{expiration}
		</if>
		)
	</insert>
	
	<select id="stockDetailByIdx" resultType="kr.co.junko.dto.StockDTO">
		select * from stock where stock_idx = #{stock_idx}
	</select>
	
	<!-- 출고 시 선택 할 때 보여지는 리스트 -->
	<select id="shipStockList">
		select 
			s.product_idx,
			p.product_name,
			s.product_option_idx,
			c.combined_name ,
			sum(stock_cnt) as stock,
			s.manufacture,
			s.expiration,
			s.warehouse_idx, 
			s.zone_idx 
		from stock s 
		join product p on p.product_idx = s.product_idx
		left join product_option po on po.product_idx = s.product_idx
		left join combined c on c.combined_idx = po.combined_idx
		<where>
			del_yn = false
			<if test="warehouse_idx != null and warehouse_idx != 0">
				and s.warehouse_idx = #{warehouse_idx}
			</if>
			<if test="product_idx != null and product_idx != 0">
				and s.product_idx = #{product_idx}
			</if>
			<if test="product_option_idx != null and product_option_idx != 0">
				and s.product_option_idx = #{product_option_idx}
			</if>
		</where>
		group by 
			s.product_idx,
			s.product_option_idx, 
			s.manufacture , 
			s.expiration ,
			s.warehouse_idx,
			s.zone_idx
		having
			sum(stock_cnt)>0
	</select>
	
	<!-- 창고,구역,담당자,상품,타입 별 기록 검색 -->
	<select id="StockList" parameterType="map" resultType="kr.co.junko.dto.StockDTO">
		select * from stock
		<where>
			del_yn = false
			<if test="warehouse_idx != null and warehouse_idx != 0">
				and warehouse_idx = #{warehouse_idx}
			</if>
			<if test="zone_idx != null and zone_idx != 0">
				and zone_idx = #{zone_idx}
			</if>
			<if test="user_idx != null and user_idx != 0">
				and user_idx = #{user_idx}
			</if>
			<if test="product_idx != null and product_idx != 0">
				and product_idx = #{product_idx}
			</if>
			<if test="type != null and type != ''">
				and type = #{type}
			</if>
		</where>
		<if test="orderColumn != null and orderColumn != ''">
			order by ${orderColumn}
			<if test="orderDirection != null and orderDirection !=''">
				${orderDirection}
			</if>
		</if>
		limit #{cnt} offset #{offset}
	</select>
	
	<select id="StockListTotalPage" parameterType="map">
		select ceil(count(*)*1.0/#{cnt}) from stock
		<where>
			del_yn = false
			<if test="warehouse_idx != null and warehouse_idx != 0">
				and warehouse_idx = #{warehouse_idx}
			</if>
			<if test="zone_idx != null and zone_idx != 0">
				and zone_idx = #{zone_idx}
			</if>
			<if test="user_idx != null and user_idx != 0">
				and user_idx = #{user_idx}
			</if>
			<if test="product_idx != null and product_idx != 0">
				and product_idx = #{product_idx}
			</if>
			<if test="type != null and type != ''">
				and type = #{type}
			</if>
		</where>
	</select>
	
	
	<select id="StockSumList" parameterType="map" resultType="map">
		select
		s.product_idx
		,p.product_name 
		<if test="group != null and group.contains('option')">
		,s.product_option_idx
		</if>
		<if test="group != null and group.contains('manufacture')">
		,s.manufacture
		</if>
		<if test="group != null and group.contains('expiration')">
		,s.expiration
		</if>
		<if test="group != null and group.contains('warehouse')">
		,s.warehouse_idx
		</if>
		<if test="group != null and group.contains('zone')">
		,s.zone_idx
		</if>
		,sum(s.stock_cnt) as stock_sum
		from stock s
		join product p on s.product_idx = p.product_idx
		left join product_option po on p.product_idx = po.product_idx
		where s.del_yn = false
		group by product_idx 
		<if test="group != null and group.contains('option')">
		,s.product_option_idx
		</if>
		<if test="group != null and group.contains('manufacture')">
		,s.manufacture
		</if>
		<if test="group != null and group.contains('expiration')">
		,s.expiration
		</if>
		<if test="group != null and group.contains('warehouse')">
		,s.warehouse_idx
		</if>
		<if test="group != null and group.contains('zone')">
		,s.zone_idx
		</if>
		limit #{cnt} offset #{offset}
	</select>
	
	<select id="StockSumListTotalPage" parameterType="map">
		select ceil(count(*)*1.0/#{cnt}) from (
			select s.product_idx 
			from stock s
			join product p on s.product_idx = p.product_idx
			left join product_option po on p.product_idx = po.product_idx
			where s.del_yn = false
			group by product_idx 
			<if test="group != null and group.contains('option')">
			,s.product_option_idx
			</if>
			<if test="group != null and group.contains('manufacture')">
			,s.manufacture
			</if>
			<if test="group != null and group.contains('expiration')">
			,s.expiration
			</if>
			<if test="group != null and group.contains('warehouse')">
			,s.warehouse_idx
			</if>
			<if test="group != null and group.contains('zone')">
			,s.zone_idx
			</if>
		) as stock_group
	</select>
	
	<update id="stockUpdate" parameterType="kr.co.junko.dto.StockDTO">
		update stock
		<trim prefix="set" suffixOverrides=",">
			<if test="warehouse_idx != null and warehouse_idx != 0">
				warehouse_idx = #{warehouse_idx},
			</if>
			<if test="zone_idx != null and zone_idx != 0">
				zone_idx = #{zone_idx},
			</if>
			<if test="user_idx != null and user_idx != 0">
				user_idx = #{user_idx},
			</if>
			<if test="product_idx != null and product_idx != 0">
				product_idx = #{product_idx},
			</if>
			<if test="product_option_idx != null and product_option_idx != 0">
				product_option_idx = #{product_option_idx},
			</if>
			<if test="manufacture != null and manufacture != ''">
				manufacture = #{manufacture},
			</if>
			<if test="expiration != null and expiration != ''">
				expiration = #{expiration},
			</if>
			<if test="type != null and type != ''">
				type = #{type},
			</if>
			<if test="stock_cnt != null and stock_cnt != 0">
				stock_cnt = #{stock_cnt}
			</if>
		</trim>
		where stock_idx = #{stock_idx}
	</update>
	
	<update id="stockDel">
		update stock set del_yn = true where stock_idx = #{param1}
	</update>
	
</mapper>