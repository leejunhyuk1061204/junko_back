<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.junko.receive.ReceiveDAO">

	<insert id="insertReceive" parameterType="kr.co.junko.dto.ReceiveDTO"
	useGeneratedKeys="true"
	keyColumn="receive_idx"
	keyProperty="receive_idx">
		insert into receive (order_idx,user_idx,receive_date)
		values (#{order_idx},#{user_idx},#{receive_date})
	</insert>
	
	<insert id="insertReceiveProduct" parameterType="kr.co.junko.dto.ReceiveProductDTO">
		insert into receive_product (receive_idx,product_idx,receive_cnt
		<if test="product_option_idx != null and product_option_idx != 0">
			,product_option_idx
		</if>
		)
		values (#{receive_idx},#{product_idx},#{receive_cnt}
		<if test="product_option_idx != null and product_option_idx != 0">
		,#{product_option_idx}
		</if>
		)
	</insert>

	<select id="receiveInfo" resultType="map">
		select o.order_idx
		,w.user_idx 
		,op.delivery_date
		,op2.product_idx 
		,op2.product_option_idx
		,pp.order_cnt
		from `order` o
		join warehouse w on w.warehouse_idx = o.warehouse_idx 
		join order_plan op on o.order_idx = op.order_idx
		join plan_product pp on op.plan_idx = pp.plan_idx
		join order_product op2 on pp.order_product_idx = op2.order_product_idx
		where o.order_idx = #{param1}
	</select>
	
	<update id="receiveUpdate" parameterType="kr.co.junko.dto.ReceiveDTO">
		update receive
		<trim prefix="set" suffixOverrides=",">
				<if test="order_idx != null and order_idx != 0">
					order_idx=#{order_idx},
				</if>
				<if test ="user_idx != null and user_idx != 0">
					user_idx=#{user_idx},
				</if>
				<if test ="receive_date != null">
					receive_date=#{receive_date},
				</if>
				<!-- 입고 완료는 다른 메서드 -->
				<if test="status != null and status != ''">
					status=#{status}
				</if>
		</trim>
		where receive_idx = #{receive_idx}
	</update>
	
	<update id="receiveProductUpdate" parameterType="kr.co.junko.dto.ReceiveProductDTO">
		update receive_product
		<trim prefix="set" suffixOverrides=",">
			<if test="receive_idx != null and receive_idx != 0">
				receive_idx = #{receive_idx},
			</if>
			<if test="product_idx != null and product_idx != 0">
				product_idx = #{product_idx},
			</if>
			<if test="product_option_idx != null and product_option_idx != 0">
				product_option_idx = #{product_option_idx},
			</if>
			<if test="receive_cnt != null and receive_cnt != 0">
				receive_cnt = #{receive_cnt}
			</if>
		</trim>
		where receive_product_idx=#{receive_product_idx}
	</update>
	
	<select id="receiveList" parameterType="map" resultType="map">
		select 
			r.*
			,u.user_name
			,p.product_name
			,c.combined_name 
			,w.warehouse_name
			,count(r.receive_idx) as product_cnt
		from receive r
			join `user` u on r.user_idx = u.user_idx
			join receive_product rp on r.receive_idx = rp.receive_idx
			join product p on rp.product_idx = p.product_idx
			join `order` o on r.order_idx = o.order_idx 
			join warehouse w on o.warehouse_idx = w.warehouse_idx 
			left join product_option po on po.product_option_idx = rp.product_option_idx
			left join combined c on po.combined_idx = c.combined_idx
		<where>
			r.del_yn = false
			<if test="order_idx != null and order_idx != 0">
				and r.order_idx = #{order_idx}
			</if>
			<if test="user_idx != null and user_idx != 0">
				and r.user_idx = #{user_idx}
			</if>
			<if test="start_date != null and start_date != ''">
				and r.receive_date >= #{start_date}
			</if>
			<if test="end_date != null and end_date != ''">
				and r.receive_date <![CDATA[<]]>= #{end_date}
			</if>
			<if test="receive_date !=null and receive_date !=''">
				and r.receive_date = #{receive_date}
			</if>
			<if test="status != null and status !=''">
				and r.status = #{status}
			</if>
			<if test="search != null and search != ''">
					AND (
					 r.receive_idx LIKE CONCAT('%', #{search}, '%')
				OR w.warehouse_name LIKE CONCAT('%', #{search}, '%')
				OR u.user_name LIKE CONCAT('%', #{search}, '%')
				)
			</if>
		</where>
		GROUP by r.receive_idx
		<if test="orderColumn != null and orderColumn !=''">
			order by ${orderColumn}
			<if test="orderDirection != null and orderDirection !=''">
				${orderDirection}
			</if>
		</if>
		limit #{cnt} offset #{offset}
	</select>
	
	<select id="receiveTotalPage" parameterType="map">
		select ceil(count(*)*1.0/#{cnt}) as total from (
		select 
			r.*
			,u.user_name
			,p.product_name
			,c.combined_name 
			,w.warehouse_name
			,count(r.receive_idx) as product_cnt
		from receive r
			join `user` u on r.user_idx = u.user_idx
			join receive_product rp on r.receive_idx = rp.receive_idx
			join product p on rp.product_idx = p.product_idx
			join `order` o on r.order_idx = o.order_idx 
			join warehouse w on o.warehouse_idx = w.warehouse_idx 
			left join product_option po on po.product_option_idx = rp.product_option_idx
			left join combined c on po.combined_idx = c.combined_idx
		<where>
			r.del_yn = false
			<if test="order_idx != null and order_idx != 0">
				and r.order_idx = #{order_idx}
			</if>
			<if test="user_idx != null and user_idx != 0">
				and r.user_idx = #{user_idx}
			</if>
			<if test="start_date != null and start_date != ''">
				and r.receive_date >= #{start_date}
			</if>
			<if test="end_date != null and end_date != ''">
				and r.receive_date <![CDATA[<]]>= #{end_date}
			</if>
			<if test="receive_date !=null and receive_date !=''">
				and r.receive_date = #{receive_date}
			</if>
			<if test="status != null and status !=''">
				and r.status = #{status}
			</if>
			<if test="search != null and search != ''">
					AND (
					 r.receive_idx LIKE CONCAT('%', #{search}, '%')
				OR w.warehouse_name LIKE CONCAT('%', #{search}, '%')
				OR u.user_name LIKE CONCAT('%', #{search}, '%')
				)
			</if>
		</where>
		GROUP by r.receive_idx
		) as sub
	</select>
	
	<select id="receiveProductList" parameterType="map" resultType="map">
		select 
			rp.* ,
			p.product_name,
			c.combined_name 
		from receive_product rp 
			join product p on rp.product_idx = p.product_idx 
			left join product_option po on rp.product_option_idx = po.product_option_idx
			left join combined c on po.combined_idx = c.combined_idx
		<where>
			rp.del_yn = false
			<if test="receive_idx != null and receive_idx != 0">
				and rp.receive_idx=#{receive_idx}
			</if>
			<if test="product_idx != null and product_idx != 0">
				and rp.product_idx=#{product_idx}
			</if>
			<if test="product_option_idx != null and product_option_idx != 0">
				and rp.product_option_idx=#{product_option_idx}
			</if>
			<if test="search != null and search != ''">
				AND p.product_name LIKE CONCAT('%', #{search}, '%')
			</if>
		</where>
		<if test="orderColumn != null and orderColumn !=''">
			order by ${orderColumn}
			<if test="orderDirection != null and orderDirection !=''">
				${orderDirection}
			</if>
		</if>
		<if test="page != null and page != ''">
			limit #{cnt} offset #{offset}
		</if>
	</select>
	
	<select id="receiveProductTotalPage" parameterType="map">
		select ceil(count(*)*1.0/#{cnt}) as total from receive_product
		<where>
			del_yn = false
			<if test="receive_idx != null and receive_idx != 0">
				and receive_idx=#{receive_idx}
			</if>
			<if test="product_idx != null and product_idx != 0">
				and product_idx=#{product_idx}
			</if>
			<if test="product_option_idx != null and product_option_idx != 0">
				and product_option_idx=#{product_option_idx}
			</if>
		</where>
	</select>
	
	<update id="receiveDel">
		update receive set del_yn = true where receive_idx = #{receive_idx}
	</update>
	
	<update id="receiveProductDel">
		update receive_product set del_yn = true where receive_idx = #{receive_idx}
	</update>
	
</mapper>