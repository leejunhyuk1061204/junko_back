<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.junko.template.TemplateDAO">

    <!-- 템플릿 등록 -->
    <insert id="templateInsert" parameterType="kr.co.junko.dto.TemplateDTO" useGeneratedKeys="true" keyProperty="template_idx">
        INSERT INTO template (
            user_idx, template_name, template_desc,
            template_html, category, created_date)
        VALUES (
            #{user_idx}, #{template_name}, #{template_desc},
            #{template_html}, #{category}, NOW())
    </insert>
    
    <!-- 변수 등록 -->
    <insert id="insertVariable" parameterType="kr.co.junko.dto.TemplateVarDTO">
        INSERT INTO template_variable (template_idx, variable_name)
        	VALUES (#{template_idx}, #{variable_name})
    </insert>
    
    <!-- 템플릿 상세 조회 -->
    <select id="selectTemplate" parameterType="int" resultType="kr.co.junko.dto.TemplateDTO">
        SELECT * FROM template
        WHERE template_idx = #{template_idx} AND del_yn = 0
    </select>
    
    <!-- 템플릿 수정 -->
    <update id="templateUpdate" parameterType="kr.co.junko.dto.TemplateDTO">
        UPDATE template
        SET template_name = #{template_name},
            template_desc = #{template_desc},
            template_html = #{template_html},
            category = #{category},
            update_date = NOW()
        WHERE template_idx = #{template_idx} AND del_yn = 0
    </update>
    
    <!-- 기존 변수 삭제 -->
    <update id="templateVarDel" parameterType="int">
        UPDATE template_variable
        SET del_yn = 1
        WHERE template_idx = #{template_idx}
    </update>
    
    <!-- 템플릿 삭제 -->
    <update id="templateDel" parameterType="int">
    	UPDATE template SET del_yn = 1
  		WHERE template_idx = #{template_idx}
    </update>
    
    <!-- 템플릿 리스트 -->
	<select id="templateList" parameterType="map" resultType="kr.co.junko.dto.TemplateDTO">
	    SELECT t.*, u.user_name AS user_name
	    FROM template t
	    JOIN `user` u ON t.user_idx = u.user_idx
	    WHERE t.del_yn = 0
	    <if test="category != null and category != ''">
	        AND t.category = #{category}
	    </if>
	    <if test="search != null and search != ''">
	        AND (t.template_name LIKE CONCAT('%', #{search}, '%')
	             OR t.template_desc LIKE CONCAT('%', #{search}, '%'))
	    </if>
	    ORDER BY ${sort}
	    LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<select id="templateTotalCnt" parameterType="map" resultType="int">
	    SELECT COUNT(*)
	    FROM template
	    WHERE del_yn = 0
	    <if test="category != null and category != ''">
	        AND category = #{category}
	    </if>
	    <if test="search != null and search != ''">
	        AND (template_name LIKE CONCAT('%', #{search}, '%')
	             OR template_desc LIKE CONCAT('%', #{search}, '%'))
	    </if>
	</select>
    
    <!-- 템플릿 상세보기 -->
    <select id="templateDetail" resultType="kr.co.junko.dto.TemplateDTO">
    	SELECT * FROM template
    	WHERE template_idx = #{template_idx} AND del_yn = 0
    </select>
    
    <!-- 변수 목록 조회 -->
    <select id="templateVarList" parameterType="int" resultType="kr.co.junko.dto.TemplateVarDTO">
    	SELECT * FROM template_variable
        WHERE template_idx = #{template_idx} AND del_yn = 0
    </select>
    
    <!-- 히스토리 저장 -->
    <insert id="insertTemplateHistory" parameterType="kr.co.junko.dto.TemplateDTO">
	    INSERT INTO template_history (template_idx, user_idx, template_name, template_desc, template_html)
	    VALUES (#{template_idx}, #{user_idx}, #{template_name}, #{template_desc}, #{template_html})
	</insert>

	<!-- 히스토리 목록 조회 -->
	<select id="templateHistory" parameterType="int" resultType="kr.co.junko.dto.TemplateHistoryDTO">
	    SELECT *
	    FROM template_history
	    WHERE template_idx = #{template_idx}
	    ORDER BY saved_at DESC
	</select>
	
	<!-- 카테고리에 따라서 템플릿 보기 -->
	<select id="templateListCategory" parameterType="string" resultType="kr.co.junko.dto.TemplateDTO">
		SELECT *
		FROM template
		WHERE del_yn = 0
		  AND category = #{category}
		ORDER BY created_date DESC
	</select>

	<!-- 카테고리 목록만 보는 리스트 -->
	<select id="templateCategoryList" resultType="string">
	    SELECT DISTINCT category
	    FROM template
	    WHERE del_yn = 0
	    ORDER BY category
	</select>
	
</mapper>