<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.junko.voucher.VoucherDAO">

    <!-- 등록 -->
    <insert id="voucherInsert" parameterType="kr.co.junko.dto.VoucherDTO">
     <selectKey keyProperty="entry_idx" resultType="int" order="AFTER">
        SELECT LAST_INSERT_ID()
    </selectKey>
        INSERT INTO voucher (
            account_idx, entry_type, amount, entry_date,
            custom_idx, sales_idx, status, user_idx
        ) VALUES (
            #{account_idx}, #{entry_type}, #{amount}, NOW(),
            #{custom_idx}, #{sales_idx}, #{status}, #{user_idx}
        )
    </insert>

    <!-- 수정 (작성중 상태만) -->
    <update id="voucherUpdate" parameterType="kr.co.junko.dto.VoucherDTO">
        UPDATE voucher
        SET account_idx = #{account_idx},
            entry_type = #{entry_type},
            amount = #{amount},
            entry_date = NOW(),
            custom_idx = #{custom_idx},
            sales_idx = #{sales_idx},
            status = #{status}
        WHERE entry_idx = #{entry_idx}
          AND del_yn = 0
    </update>

    <!-- 논리 삭제 -->
    <update id="voucherDel">
        UPDATE voucher
        SET del_yn = 1
        WHERE entry_idx = #{entryIdx}
          AND del_yn = 0
    </update>

    <!-- 리스트 조회 -->
    <select id="voucherList" resultType="kr.co.junko.dto.VoucherDTO">
	  SELECT v.*, c.custom_name, u.user_name, c.custom_owner
	  FROM voucher v
	  LEFT JOIN custom c ON v.custom_idx = c.custom_idx
	  LEFT JOIN user u ON v.user_idx = u.user_idx
	  WHERE v.del_yn = 0
		<if test="custom_name != null and custom_name != ''">
		  AND c.custom_name LIKE CONCAT('%', #{custom_name}, '%')
		</if>
		<if test="custom_owner != null and custom_owner != ''">
		  AND c.custom_owner LIKE CONCAT('%', #{custom_owner}, '%')
		</if>
		<if test="from != null and from != ''">
		  AND v.entry_date &gt;= #{from}
		</if>
		<if test="to != null and to != ''">
		  AND v.entry_date &lt;= #{to}
		</if>
		<if test="status != null and status != ''">
		  AND v.status = #{status}
		</if>
	<choose>
	  <when test="sort != null and sort != '' and order != null and order != ''">
	    ORDER BY ${sort} ${order}
	  </when>
	  <otherwise>
	    ORDER BY entry_date desc
	  </otherwise>
	</choose>
	  LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 총 개수 조회 -->
	<select id="voucherTotal" resultType="int">
	  SELECT COUNT(*)
	  FROM voucher v
	  LEFT JOIN custom c ON v.custom_idx = c.custom_idx
	  WHERE v.del_yn = 0
		<if test="custom_name != null and custom_name != ''">
		  AND c.custom_name LIKE CONCAT('%', #{custom_name}, '%')
		</if>
		<if test="custom_owner != null and custom_owner != ''">
		  AND c.custom_owner LIKE CONCAT('%', #{custom_owner}, '%')
		</if>
		<if test="from != null and from != ''">
		  AND v.entry_date &gt;= #{from}
		</if>
		<if test="to != null and to != ''">
		  AND v.entry_date &lt;= #{to}
		</if>
		<if test="status != null and status != ''">
		  AND v.status = #{status}
		</if>
	</select>

    <!-- 상태 조회 -->
    <select id="voucherStatus" resultType="String">
        SELECT status
        FROM voucher
        WHERE entry_idx = #{entry_idx}
          AND del_yn = 0
    </select>

    <!-- 전표 상세 조회 -->
    <insert id="insertEntryDetail" parameterType="kr.co.junko.dto.EntryDetailDTO">
        INSERT INTO entry_detail (
            as_idx,
            amount,
            type,
            del_yn,
            entry_idx
        ) VALUES (
            #{as_idx},
            #{amount},
            #{type},
            #{del_yn},
            #{entry_idx}
        ) 
    </insert>

    <!-- 전표 기본 정보 -->
    <select id="voucherDetail" resultType="kr.co.junko.dto.VoucherDTO">
      SELECT v.*, c.custom_name, u.user_name, c.custom_owner
      FROM voucher v
      LEFT JOIN custom c ON v.custom_idx = c.custom_idx
      LEFT JOIN user u ON v.user_idx = u.user_idx
      WHERE v.entry_idx = #{entry_idx}
      AND v.del_yn = 0
    </select>

    <!-- 전표 분개 내역 -->
    <select id="entryDetailList" resultType="kr.co.junko.dto.EntryDetailDTO">
        SELECT * FROM entry_detail
        WHERE entry_idx = #{entry_idx}
        AND del_yn = 0
    </select>

    <!-- 전표 상태 업데이트 -->
    <update id="voucherStatusUpdate" parameterType="map">
        UPDATE voucher
        SET status = #{status}
        WHERE entry_idx = #{entry_idx}
    </update>

    <!-- 전표 기준 수금/지급 존재 여부 확인 -->
    <select id="checkReceiptPayment" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM receipt_payment
        WHERE entry_idx = #{entry_idx} AND del_yn = 0
    </select>

    <!-- 전표 기반 수금/지급 자동 생성 -->
    <insert id="insertReceiptPayment" parameterType="map">
        INSERT INTO receipt_payment (
            type, entry_idx, custom_idx, amount, method, transaction_date,
            note, status, reg_date, user_idx
        )
        VALUES (
            #{type}, #{entry_idx}, #{custom_idx}, #{amount}, #{method}, #{transaction_date},
            #{note}, #{status}, NOW(), #{user_idx}
        )
    </insert>
    
    <update id="delEntryDetailEntryIdx" parameterType="int">
	    UPDATE entry_detail
	    SET del_yn = 1
	    WHERE entry_idx = #{entry_idx}
	</update>
	
	<select id="selectAsNameByIdx" resultType="String">
	    SELECT as_name FROM account_code WHERE as_idx = #{as_idx}
	</select>
    
  <select id="getSettledVouchers" resultType="kr.co.junko.dto.VoucherDTO">
    SELECT v.*, c.custom_name
    FROM voucher v
    LEFT JOIN custom c ON v.custom_idx = c.custom_idx
    WHERE v.status = '정산'
      AND v.del_yn = 0
  </select>
  
<select id="getReceivableVouchers" resultType="kr.co.junko.dto.VoucherDTO">
  SELECT v.*, c.custom_name
  FROM voucher v
  JOIN custom c ON v.custom_idx = c.custom_idx
  WHERE v.entry_type IN ('수금', '지급')
    AND v.del_yn = 0
    AND NOT EXISTS (
      SELECT 1
      FROM receipt_payment rp
      WHERE rp.entry_idx = v.entry_idx AND rp.del_yn = 0
    )
    <if test="custom_name != null and custom_name != ''">
      AND c.custom_name = #{custom_name}
    </if>
</select>

</mapper>